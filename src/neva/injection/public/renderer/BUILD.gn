# Copyright 2020 LG Electronics, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0

import("//neva/neva.gni")

source_set("renderer") {
  defines = [ "IS_INJECTION_IMPL" ]

  deps = [
    "//base",
    "//neva/injection/renderer",
    "//neva/injection/renderer:resources"
  ]

  sources = [
    "injection_install.cc",
    "injection_install.h",
  ]

  if (enable_browser_control_webapi) {
    sources += [
      "browser_control_webapi.cc",
      "browser_control_webapi.h",
      "cookiemanager_webapi.cc",
      "cookiemanager_webapi.h",
      "customuseragent_webapi.cc",
      "customuseragent_webapi.h",
      "mediacapture_webapi.cc",
      "mediacapture_webapi.h",
      "popupblocker_webapi.cc",
      "popupblocker_webapi.h",
      "sitefilter_webapi.cc",
      "sitefilter_webapi.h",
      "userpermission_webapi.cc",
      "userpermission_webapi.h",
    ]
  }

  if (enable_sample_webapi) {
    sources += [
      "sample_webapi.cc",
      "sample_webapi.h",
    ]
  }

  if (enable_webos_system_webapi) {
    sources += [
      "webossystem_webapi.cc",
      "webossystem_webapi.h",
    ]
  }

  if (enable_webos_service_bridge_webapi) {
    sources += [
      "webosservicebridge_webapi.cc",
      "webosservicebridge_webapi.h"
    ]
  }

  if (enable_memorymanager_webapi) {
    sources += [
      "memorymanager_webapi.cc",
      "memorymanager_webapi.h",
    ]
  }

  if (enable_browser_shell) {
    sources += [
      "browser_shell_ipc_webapi.cc",
      "browser_shell_ipc_webapi.h",
      "browser_shell_webapi.cc",
      "browser_shell_webapi.h",
    ]
  }

  if (enable_pwa_manager_webapi) {
    sources += [
      "installable_manager_webapi.cc",
      "installable_manager_webapi.h",
    ]
  }

  if (use_gav) {
    sources += [
      "webosgavplugin_webapi.cc",
      "webosgavplugin_webapi.h",
    ]
  }

  if (use_neva_chrome_extensions) {
    sources += [
      "chrome_extensions_webapi.cc",
      "chrome_extensions_webapi.h",
    ]
  }
}
